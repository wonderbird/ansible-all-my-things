---
- name: Create AWS Linux Development Environment
  hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - ../inventories/group_vars/linux/vars.yml
    - ../inventories/group_vars/aws_ec2/vars.yml
    - ../inventories/group_vars/aws_ec2_linux/vars.yml

  vars:
    # Default values - can be overridden in group_vars
    aws_region: "{{ aws_default_region | default('aws_default_region must be defined') }}"
    aws_instance_type: "{{ aws_default_instance_type | default('aws_default_instance_type must be defined') }}"
    aws_ami_id: "{{ aws_default_ami_id | default('aws_default_ami_id must be defined') }}"  # Ubuntu 24.04 LTS in eu-north-1
    aws_ssh_key_name: "{{ my_ssh_key_name | default('my_ssh_key_name must be defined') }}"
    aws_security_group_name: "ansible-sg"
    aws_instance_name: "rivendell"

  tasks:
    - name: Get current public IP for security group
      ansible.builtin.uri:
        url: https://ipinfo.io/ip
        return_content: true
      register: current_ip_result

    - name: Set current IP fact
      ansible.builtin.set_fact:
        current_public_ip: "{{ current_ip_result.content | trim }}"

    - name: Create security group
      amazon.aws.ec2_security_group:
        name: "{{ aws_security_group_name }}"
        description: "Security group for Ansible development environment"
        region: "{{ aws_region }}"
        rules:
          - proto: tcp
            ports:
              - 22    # SSH
            cidr_ip: "{{ current_public_ip }}/32"
            rule_desc: "SSH access from current IP (for Ansible and manual access)"
          - proto: tcp
            ports:
              - 3389  # RDP
            cidr_ip: "{{ current_public_ip }}/32"
            rule_desc: "RDP access from current IP (for desktop applications)"
        tags:
          Name: "{{ aws_security_group_name }}"
          Purpose: "ansible-dev-env"
          CreatedBy: "ansible"
      register: security_group

    - name: Launch Linux EC2 instance
      amazon.aws.ec2_instance:
        name: "{{ aws_instance_name }}"
        image_id: "{{ aws_ami_id }}"
        instance_type: "{{ aws_instance_type }}"
        key_name: "{{ aws_ssh_key_name }}"
        security_groups:
          - "{{ aws_security_group_name }}"
        region: "{{ aws_region }}"
        state: present
        wait: true
        wait_timeout: 300
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_type: gp3
              volume_size: 20
              delete_on_termination: true
        tags:
          Name: "{{ aws_instance_name }}"
          platform: "linux"
      register: ec2_instance

    - name: Wait for SSH to become available
      ansible.builtin.wait_for:
        host: "{{ ec2_instance.instances[0].public_ip_address }}"
        port: 22
        delay: 30
        timeout: 300
        state: started
      when: ec2_instance.instances | length > 0

    - name: Refresh inventory to ensure new host is available
      meta: refresh_inventory
