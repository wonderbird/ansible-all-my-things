---
- hosts: all
  remote_user: root
  become: true
  
  vars:
    # Override the default ansible_user with root, because no other users are
    # present on a fresh system.
    ansible_user: root

    # Because this play is run as root, we cannot use {{ ansible_user }}
    # Thus, we directly assign the value defined in
    # ./inventories/group_vars/dev/vars.yml
    # TODO: smell: redundant definition of the ansible_user in inventory group variables and here
    ansible_user_name: "gandalf"
    # TODO: smell: redundant definition of the default desktop_user in inventory group variables and here
    desktop_user_name: "{{ desktop_user | default('galadriel') }}"

    users:
      - name: "{{ ansible_user_name }}"
        password: "{{ ansible_user_password }}"
      - name: "{{ desktop_user_name }}"
        password: "{{ desktop_user_password }}"

  vars_prompt:
    - name: ssh_public_key
      prompt: "Enter the SSH public key for all users"
      private: no

    - name: ansible_user_password
      prompt: "Enter the password for the ansible user {{ ansible_user_name }}"
      private: yes

    - name: desktop_user_password
      prompt: "Enter the password for the desktop user {{ desktop_user_name }}"
      private: yes

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted

  tasks:
    - name: Setup user accounts
      no_log: true # Prevent logging the passwords
      user:
        name: "{{ item.name }}"
        password: "{{ item.password | password_hash('sha512') }}"
        shell: /bin/bash
        groups: sudo
        append: yes
        state: present
      loop: "{{ users }}"

    - name: Allow passwordless sudo for ansible user
      lineinfile:
        path: /etc/sudoers.d/50-ansible-user-does-not-need-password
        regexp: '^{{ ansible_user_name }}'
        line: '{{ ansible_user_name }} ALL=(ALL) NOPASSWD:ALL'
        validate: 'visudo -cf %s'
        create: yes
        state: present

    - name: Add SSH public key to all users
      no_log: true # Prevent logging the passwords
      authorized_key:
        user: "{{ item.name }}"
        key: "{{ ssh_public_key }}"
        state: present
      loop: "{{ users }}"
    
    - name: Disable password authentication for SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present
      notify: Restart SSH