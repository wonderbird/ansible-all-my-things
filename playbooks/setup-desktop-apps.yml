---
- hosts: dev
  become: true

  vars:
    backup_remote_path: "/home/{{ desktop_user }}/chromium-backup.tar.gz"
    backup_local_path: "{{ playbook_dir }}/../configuration{{ backup_remote_path }}"

  handlers:
    # TODO: smell - cleanup apt cache is duplicate in several playbooks
    - name: Cleanup apt cache
      apt:
        autoremove: yes
        autoclean: yes

  tasks:

    #####
    # Install and configure Chromium
    #####

    # Visual Studio Code requires Chromium for key management. Thus, Chromium is
    # installed first.
    # See: https://code.visualstudio.com/docs/configure/settings-sync#_troubleshooting-keychain-issues
    - name: Install Chromium
      snap: name=chromium state=present

    - name: Check if backup file exists locally
      delegate_to: localhost
      become: false
      stat:
        path: "{{ backup_local_path }}"
      register: backup_local

    - name: Upload Chromium backup file to remote server
      copy:
        src: "{{ backup_local_path }}"
        dest: "{{ backup_remote_path }}"
        owner: "{{ desktop_user }}"
        group: "{{ desktop_user }}"
        mode: '0644'
      when: backup_local.stat.exists
      register: upload_result


    - name: Remove existing Chromium profile
      file:
        path: "/home/{{ desktop_user }}/snap/chromium/common/chromium/Default"
        state: absent
      when: not upload_result.failed | default(true)

    - name: Ensure Chromium base directory exists
      file:
        path: "/home/{{ desktop_user }}/snap/chromium/common/chromium"
        state: directory
        mode: '0755'
        owner: "{{ desktop_user }}"
        group: "{{ desktop_user }}"
      when: not upload_result.failed | default(true)

    - name: Extract Chromium backup
      become_user: "{{ desktop_user }}"
      unarchive:
        src: "{{ backup_remote_path }}"
        dest: "/home/{{ desktop_user }}/snap/chromium/common/chromium/"
        remote_src: yes
      when: not upload_result.failed | default(true)
      register: extract_result

    - name: Remove temporary archive from remote server
      file:
        path: "{{ backup_remote_path }}"
        state: absent
      when: extract_result.changed | default(false)

    - name: Show restore status
      debug:
        msg: "Chromium profile restored successfully from {{ backup_local_path | basename }}"
      when: extract_result.changed | default(false)

    - name: Show status when no backup found
      debug:
        msg: "No Chromium backup found. Skipping restore."
      when: not backup_local.stat.exists

    #####
    # Install and configure Visual Studio Code
    #####
    # Adopted from https://code.visualstudio.com/docs/setup/linux

    # Check if the Microsoft signing key is already installed
    - name: Check if Microsoft apt key is already installed
      command: >
        gpg --list-keys --keyring /etc/apt/keyrings/packages.microsoft.gpg
      register: have_microsoft_key
      changed_when: false
      failed_when: false

    # Warning:
    #   To install the Microsoft signing key,
    #   do not use apt_key module, because it is deprecated.
    #
    # Instead follow the instructions at
    # https://code.visualstudio.com/docs/setup/linux
    - name: Download Microsoft apt key to /tmp
      get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc
        dest: /tmp/microsoft.asc
      when: have_microsoft_key.rc != 0

    - name: Dearmor Microsoft apt key
      command: gpg --dearmor /tmp/microsoft.asc
      args:
        creates: /tmp/microsoft.asc.gpg
      when: have_microsoft_key.rc != 0

    - name: Install Microsoft apt key to /etc/apt/keyrings
      # Instead of using the copy module, use the install command
      command: >
        install -D -o root -g root -m 644
                /tmp/microsoft.asc.gpg
                /etc/apt/keyrings/packages.microsoft.gpg
      when: have_microsoft_key.rc != 0

    - name: Remove Microsoft apt key from /tmp
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/microsoft.asc
        - /tmp/microsoft.asc.gpg
      when: have_microsoft_key.rc != 0

    # Include arm64 architecture to support Apple Silicon when running
    # on the Vagrant / Tart test environment
    - name: Add Microsoft apt repository
      apt_repository:
        repo: deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main
        state: present

    - name: Install apt-transport-https
      apt:
        name: apt-transport-https
        state: present

    - name: Update apt cache
      apt: update_cache=yes

    - name: Install VS Code
      apt:
        name: code
        state: present
      notify: Cleanup apt cache

    # Configure keyring as described in
    # https://code.visualstudio.com/docs/configure/settings-sync#_troubleshooting-keychain-issues
    - name: Configure keyring
      become_user: "{{ desktop_user }}"
      lineinfile:
        path: /home/{{ desktop_user }}/.vscode/argv.json
        insertafter: '^{$'
        line: '	"password-store": "gnome-libsecret",'
        state: present
