---
- hosts: dev
  tags: not-supported-on-vagrant-docker
  become: true

  vars_files:
    - vars-usernames.yml
    - vars-secrets.yml

  vars:
    ansible_user: "{{ my_ansible_user }}"
    backup_user: "{{ desktop_users[0].name }}"
    config_remote_dir: "/home/{{ backup_user }}/.local/share/keyrings"
    config_remote_parent_dir: "{{ config_remote_dir | dirname }}"
    backup_remote_path: "/home/{{ backup_user }}/keyrings-backup.tar.gz"
    backup_local_path: "{{ playbook_dir }}/../configuration/home/{{ backup_user }}/keyrings-backup.tar.gz"

  tasks:

    # TODO: smell - complicated error handling - consider using `block`, `rescue`, `always` - see p. 121 (147 in PDF) of Ansible for DevOps

    - name: Check if archive file exists locally
      delegate_to: localhost
      become: false
      stat:
        path: "{{ backup_local_path }}"
      register: archive_local

    - name: Upload archive file to remote server
      copy:
        src: "{{ backup_local_path }}"
        dest: "{{ backup_remote_path }}"
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
        mode: '0644'
      when: archive_local.stat.exists
      register: upload_result

    - name: Remove existing configuration
      file:
        path: "{{ config_remote_dir }}"
        state: absent
      when: not upload_result.failed | default(true)

    - name: Ensure configuration parent directory exists
      file:
        path: "{{ config_remote_parent_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
      when: not upload_result.failed | default(true)

    - name: Extract archive
      become_user: "{{ backup_user }}"
      unarchive:
        src: "{{ backup_remote_path }}"
        dest: "{{ config_remote_parent_dir }}"
        remote_src: yes
      when: not upload_result.failed | default(true)
      register: extract_result

    - name: Remove temporary archive from remote server
      file:
        path: "{{ backup_remote_path }}"
        state: absent
      ignore_errors: true
